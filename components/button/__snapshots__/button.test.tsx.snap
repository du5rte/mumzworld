// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`button should render correctly 1`] = `
<View
  accessibilityLabel="Hello World!"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="button-primary"
>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 1,
          "gap": 8,
          "height": 44,
          "justifyContent": "center",
          "paddingHorizontal": 18,
        },
      }
    }
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "flexGrow": 0,
        "flexShrink": 1,
        "gap": 8,
        "height": 44,
        "justifyContent": "center",
        "paddingHorizontal": 18,
      }
    }
  >
    <View
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "backgroundColor": "hsl(0, 0%, 0%)",
            "borderCurve": "continuous",
            "borderRadius": 12,
            "cursor": "pointer",
          },
        }
      }
      style={
        {
          "backgroundColor": "hsl(0, 0%, 0%)",
          "borderCurve": "continuous",
          "borderRadius": 12,
          "bottom": 0,
          "cursor": "pointer",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <Text
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "color": "hsl(0, 0%, 100%)",
            "fontFamily": "Inter-Medium",
            "fontSize": 15,
            "numberOfLines": 1,
          },
        }
      }
      style={
        {
          "color": "hsl(0, 0%, 100%)",
          "fontFamily": "Inter-Medium",
          "fontSize": 15,
          "numberOfLines": 1,
        }
      }
    >
      Hello World!
    </Text>
  </View>
</View>
`;

exports[`button stories should render Highlight story correctly 1`] = `
<View
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="button-highlight"
>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 1,
          "gap": 8,
          "height": 44,
          "justifyContent": "center",
          "paddingHorizontal": 18,
        },
      }
    }
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "flexGrow": 0,
        "flexShrink": 1,
        "gap": 8,
        "height": 44,
        "justifyContent": "center",
        "paddingHorizontal": 18,
      }
    }
  >
    <View
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "backgroundColor": "hsl(216, 100%, 48%)",
            "borderCurve": "continuous",
            "borderRadius": 12,
            "cursor": "pointer",
          },
        }
      }
      style={
        {
          "backgroundColor": "hsl(216, 100%, 48%)",
          "borderCurve": "continuous",
          "borderRadius": 12,
          "bottom": 0,
          "cursor": "pointer",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <Text
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "color": "hsl(0, 0%, 100%)",
            "fontFamily": "Inter-Medium",
            "fontSize": 15,
            "numberOfLines": 1,
          },
        }
      }
      style={
        {
          "color": "hsl(0, 0%, 100%)",
          "fontFamily": "Inter-Medium",
          "fontSize": 15,
          "numberOfLines": 1,
        }
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`button stories should render Primary story correctly 1`] = `
<View
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="button-primary"
>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 1,
          "gap": 8,
          "height": 44,
          "justifyContent": "center",
          "paddingHorizontal": 18,
        },
      }
    }
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "flexGrow": 0,
        "flexShrink": 1,
        "gap": 8,
        "height": 44,
        "justifyContent": "center",
        "paddingHorizontal": 18,
      }
    }
  >
    <View
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "backgroundColor": "hsl(0, 0%, 0%)",
            "borderCurve": "continuous",
            "borderRadius": 12,
            "cursor": "pointer",
          },
        }
      }
      style={
        {
          "backgroundColor": "hsl(0, 0%, 0%)",
          "borderCurve": "continuous",
          "borderRadius": 12,
          "bottom": 0,
          "cursor": "pointer",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <Text
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "color": "hsl(0, 0%, 100%)",
            "fontFamily": "Inter-Medium",
            "fontSize": 15,
            "numberOfLines": 1,
          },
        }
      }
      style={
        {
          "color": "hsl(0, 0%, 100%)",
          "fontFamily": "Inter-Medium",
          "fontSize": 15,
          "numberOfLines": 1,
        }
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`button stories should render Secondary story correctly 1`] = `
<View
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="button-secondary"
>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 0,
          "flexShrink": 1,
          "gap": 8,
          "height": 44,
          "justifyContent": "center",
          "paddingHorizontal": 18,
        },
      }
    }
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "flexGrow": 0,
        "flexShrink": 1,
        "gap": 8,
        "height": 44,
        "justifyContent": "center",
        "paddingHorizontal": 18,
      }
    }
  >
    <View
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "borderCurve": "continuous",
            "borderRadius": 12,
            "cursor": "pointer",
            "shadowColor": "hsl(0, 0%, 0%)",
            "shadowOffset": {
              "height": 4,
              "width": 0,
            },
            "shadowOpacity": 0.085,
            "shadowRadius": 7,
          },
        }
      }
      style={
        {
          "backgroundColor": "hsl(0, 0%, 100%)",
          "borderCurve": "continuous",
          "borderRadius": 12,
          "bottom": 0,
          "cursor": "pointer",
          "left": 0,
          "position": "absolute",
          "right": 0,
          "shadowColor": "hsl(0, 0%, 0%)",
          "shadowOffset": {
            "height": 4,
            "width": 0,
          },
          "shadowOpacity": 0.085,
          "shadowRadius": 7,
          "top": 0,
        }
      }
    />
    <Text
      collapsable={false}
      jestAnimatedStyle={
        {
          "value": {
            "color": "hsl(0, 0%, 0%)",
            "fontFamily": "Inter-Medium",
            "fontSize": 15,
            "numberOfLines": 1,
          },
        }
      }
      style={
        {
          "color": "hsl(0, 0%, 0%)",
          "fontFamily": "Inter-Medium",
          "fontSize": 15,
          "numberOfLines": 1,
        }
      }
    >
      Button
    </Text>
  </View>
</View>
`;
